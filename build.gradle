
buildscript {
    repositories {
        mavenLocal();
        mavenCentral();
        maven {
            url("https://plugins.gradle.org/m2/");
        };
        jcenter();
    }
    dependencies {
        classpath(group: "gradle.plugin.com.iadams.plugins",
            name: "gradle-sonar-packaging-plugin", version: "0.1.4");
        classpath(group: "net.nemerosa", name: "versioning", version: "2.4.0");
    }
};

plugins {
    id "com.github.johnrengelman.shadow" version "4.0.3"
}

apply(plugin: "net.nemerosa.versioning");

ext {
    sonarApiVersion = '6.0'
}


apply(plugin: "java");
apply(plugin: "maven");
apply(plugin: "signing");
apply(plugin: "idea");
apply(plugin: "eclipse");

group = "com.mycompany";
version = "1.0.2";

def javaVersion = JavaVersion.VERSION_1_8;
sourceCompatibility = javaVersion;
targetCompatibility = javaVersion; // defaults to sourceCompatibility

/*
 * The list of repositories to use
 *
 * The first item in the list is the Maven repository where the Lite Solutions
 * cachequality API is located.
 */
repositories {
	mavenLocal();
    maven { url "https://maven.litesolutions.es/content/repositories/litesolutions-releases" };    
    mavenCentral();
}

/*
 * This is necessary for creating a plugin
 */
configurations {
    provided;
    compile.extendsFrom(provided);
}

/*
 * List of dependencies
 *
 * The first item is the Cach√© Quality API itself; the second is the SonarQube
 * API used.
 *
 * DO NOT change either of these unless otherwise instructed by Lite Solutions.
 */
dependencies {
    compileOnly "org.sonarsource.sonarqube:sonar-plugin-api:${sonarApiVersion}"
    testImplementation "org.sonarsource.sonarqube:sonar-plugin-api:${sonarApiVersion}"
    compile(group: "com.objectscriptquality", name: "objectscriptquality-api",
        version: "3.1.2");
    provided(group: "org.sonarsource.sonarqube", name: "sonar-plugin-api", version: "6.0");
    testCompile(group: "com.objectscriptquality", name: "objectscriptquality-api-testing",
            version: "3.1.2");
    testCompile(group: "com.google.guava", name: "guava",
        version: "10.0.1");
    compile 'com.google.guava:guava:10.0.1'
}

jar {
    manifest {
        attributes "Build-Jdk": System.getProperty('java.version'),
                   "Build-Time": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                   "Plugin-BuildDate": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                   'Plugin-Key': 'objectscriptExample',
                   'Plugin-Name': 'ObjectScriptExmaple',
                   //'Plugin-Version': project.version,
                   'Plugin-Class': 'com.example.cq.CqExamplePlugin',
                   "Plugin-Description": 'Plugin for ObjectScript language (Example)',
                   "Plugin-Developers": 'objectscriptQuality Team (developers@litesolutions.es)',
                   "Plugin-Homepage": 'https://objectscriptquality.com/',
                   "Plugin-License": 'Proprietary',
                   "Plugin-Organization": 'Lite solutions',
                   "Plugin-OrganizationUrl": 'http://www.litesolutions.es/',
                   "Sonar-Version": project.ext.sonarApiVersion
    }
}



test {
    useTestNG() {
        useDefaultListeners = true;
    };
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.8.1";
    distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip";
}


